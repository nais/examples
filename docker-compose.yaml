services:
  otel:
    image: grafana/otel-lgtm
    restart: always
    ports:
      - "4317:4317" # OTLP over gRPC
      - "4318:4318" # OTLP over HTTP
      - "4300:3000" # Grafana

  postgres:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: unleash
      POSTGRES_PASSWORD: unleash
      POSTGRES_DB: unleash
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data

  unleash:
    image: unleashorg/unleash-server:6
    depends_on:
      - postgres
    environment:
      DATABASE_HOST: postgres
      DATABASE_NAME: unleash
      DATABASE_USERNAME: unleash
      DATABASE_PASSWORD: unleash
      DATABASE_SSL: false
      CHECK_VERSION: false
      SEND_TELEMETRY: false
      INIT_ADMIN_API_TOKENS: "*:*.admin-token"
      INIT_CLIENT_API_TOKENS: "default:development.client-token"
    ports:
      - "4242:4242"

  quotes-backend:
    build:
      context: ./quotes-backend
      dockerfile: Dockerfile
    depends_on:
      - otel
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel:4317
      OTEL_SERVICE_NAME: quotes-backend
    ports:
      - "8080:8080"

  quotes-analytics:
    build:
      context: ./quotes-analytics
      dockerfile: Dockerfile
    depends_on:
      - otel
      - quotes-backend
    environment:
      Otel__Endpoint: http://otel:4317
      QuotesBackend__Url: http://quotes-backend:8080
    ports:
      - "8081:8081"

  quotes-frontend:
    build:
      context: ./quotes-frontend
      dockerfile: Dockerfile
    depends_on:
      - otel
      - quotes-backend
      - quotes-analytics
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel:4318
      OTEL_SERVICE_NAME: quotes-frontend
      NEXT_PUBLIC_BACKEND_URL: http://quotes-backend:8080
      ANALYTICS_SERVICE_URL: http://quotes-analytics:8081
    ports:
      - "3000:3000"

volumes:
  db-data: